class Solution 
{
    public int[] twoSum(int[] nums, int target) 
    {
      int[] ret=new int[] {0,0};
          for(int i=0;i<nums.length;i++)
             for(int j=i+1;j<nums.length;j++)
                 if(nums[i]+nums[j]==target){
                     ret[0]=i<j?i:j;
                     ret[1]=i>j?i:j;
                 }
        return ret;       
    }
}

class Solution {
    public boolean isPalindrome(int x) {
    if(x<0)
        return false;
        long n=0;
        int num = x;
        while(num !=0){
            n=n*10+num%10;
            num=num/10;
        }
       return x==n;
    }
}



class Solution {
    public int romanToInt(String s) {
int sum = 0;
        int leftnum = getValue(s.charAt(0));
        for(int i = 1;i < s.length(); i ++) {
            int num = getValue(s.charAt(i));
            if(leftnum < num) {
                sum -= leftnum;
            } else {
                sum += leftnum;
            }
           leftnum = num;
        }
        sum += leftnum;
        return sum;
    }
     private int getValue(char ch) {
        switch(ch) {
            case 'I': return 1;
            case 'V': return 5;
            case 'X': return 10;
            case 'L': return 50;
            case 'C': return 100;
            case 'D': return 500;
            case 'M': return 1000;
            default: return 0;
        }
    }
}



class Solution {
    public int lengthOfLastWord(String s) {
      int record=0;
      int end=0;
      for(int i=0;i<s.length();i++)
      {
          if(s.charAt(i)==' ')
         {
            if( record==0)
            {
                continue;
            }
             record=0;
         }
         else
         {
             record++;
             end=record;
         }
      }
         return end;
    }
}
